function cov_l75p13znq(){var path="/Users/mugahedhussain/git/repository/BreedFindingApplication/api/findBreedingService/getCatBreedsData.js";var hash="492f09b0457d94f9635cf5e53ca25e33e3a6857a";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/mugahedhussain/git/repository/BreedFindingApplication/api/findBreedingService/getCatBreedsData.js",statementMap:{"0":{start:{line:1,column:14},end:{line:1,column:35}},"1":{start:{line:3,column:25},end:{line:10,column:1}},"2":{start:{line:4,column:2},end:{line:9,column:12}},"3":{start:{line:12,column:0},end:{line:12,column:38}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:3,column:25},end:{line:3,column:26}},loc:{start:{line:3,column:37},end:{line:10,column:1}},line:3}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0},f:{"0":0},b:{},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"492f09b0457d94f9635cf5e53ca25e33e3a6857a"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_l75p13znq=function(){return actualCoverage;};}return actualCoverage;}cov_l75p13znq();const fetch=(cov_l75p13znq().s[0]++,require('node-fetch'));cov_l75p13znq().s[1]++;const getCatBreedsData=async()=>{cov_l75p13znq().f[0]++;cov_l75p13znq().s[2]++;return(await fetch(`https://api.thecatapi.com/v1/breeds`),{method:'GET',headers:{'x-api-key':'51eda471-43bb-4301-8901-9a6587a8e75a'}// request headers. format is the identical to that accepted by the Headers constructor (see below)
// http(s).Agent instance or function that returns an instance (see below)
}).json();};cov_l75p13znq().s[3]++;module.exports={getCatBreedsData};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdldENhdEJyZWVkc0RhdGEuanMiXSwibmFtZXMiOlsiZmV0Y2giLCJyZXF1aXJlIiwiZ2V0Q2F0QnJlZWRzRGF0YSIsIm1ldGhvZCIsImhlYWRlcnMiLCJqc29uIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6ImdrQ0FlWTt5RkFmWixLQUFNQSxDQUFBQSxLQUFLLHlCQUFHQyxPQUFPLENBQUMsWUFBRCxDQUFWLENBQVgsQyx1QkFFQSxLQUFNQyxDQUFBQSxnQkFBZ0IsQ0FBRyxTQUFZLCtDQUNuQyxNQUFPLENBQUMsS0FBTUYsQ0FBQUEsS0FBSyxDQUFFLHFDQUFGLENBQVgsQ0FDUixDQUNFRyxNQUFNLENBQUUsS0FEVixDQUVFQyxPQUFPLENBQUUsQ0FBRSxZQUFhLHNDQUFmLENBQXlEO0FBQ2xFO0FBSEYsQ0FETyxFQUtKQyxJQUxJLEVBQVAsQ0FNRCxDQVBELEMsdUJBU0FDLE1BQU0sQ0FBQ0MsT0FBUCxDQUFpQixDQUFFTCxnQkFBRixDQUFqQiIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGZldGNoID0gcmVxdWlyZSgnbm9kZS1mZXRjaCcpO1xuXG5jb25zdCBnZXRDYXRCcmVlZHNEYXRhID0gYXN5bmMgKCkgPT4ge1xuICByZXR1cm4gKGF3YWl0IGZldGNoKGBodHRwczovL2FwaS50aGVjYXRhcGkuY29tL3YxL2JyZWVkc2ApLFxuICB7XG4gICAgbWV0aG9kOiAnR0VUJyxcbiAgICBoZWFkZXJzOiB7ICd4LWFwaS1rZXknOiAnNTFlZGE0NzEtNDNiYi00MzAxLTg5MDEtOWE2NTg3YThlNzVhJyB9LCAvLyByZXF1ZXN0IGhlYWRlcnMuIGZvcm1hdCBpcyB0aGUgaWRlbnRpY2FsIHRvIHRoYXQgYWNjZXB0ZWQgYnkgdGhlIEhlYWRlcnMgY29uc3RydWN0b3IgKHNlZSBiZWxvdylcbiAgICAvLyBodHRwKHMpLkFnZW50IGluc3RhbmNlIG9yIGZ1bmN0aW9uIHRoYXQgcmV0dXJucyBhbiBpbnN0YW5jZSAoc2VlIGJlbG93KVxuICB9KS5qc29uKCk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IHsgZ2V0Q2F0QnJlZWRzRGF0YSB9O1xuIl19